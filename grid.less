// My extend apart from bootstrap

// vars
@gap: 15px;
@grids: 5, 7, 12;
@line-height: 1.55;

@window-sm: 768px;
@window-md: 1024px;
@window-lg: 1440px;
@window-xl: 1920px;

@color: lighten(black, 24%);
@border: lighten(black, 40%);
@primary: darken(#7DC94D, 7%);
@highlight: #ffa92e;

@font-family-sans:  "Helvetica Neue", Helvetica, Arial, sans-serif;
@font-family-serif:       Georgia, "Times New Roman", Times, serif;
@font-family-monospace:   Menlo, Monaco, Consolas, "Courier New", monospace;
@font-family-base:        @font-family-sans;

@font-size: 16px;

// normalize
* {
	&,
	&:before,
	&:after {
		box-sizing: border-box;
	}
}

html, body {
	padding: 0;
	margin: 0;
}

body {
	font-size: @font-size;
	font-family: @font-family-base;
	line-height: @line-height;
	color: @color;
}

a {
	text-decoration: none;
	border-bottom: 1px dashed;
	
	&,
	&:link {
		color: @primary;
	}
	&:visited {
		color: darken(@primary, 10%);
	}
	&:hover {
		color: lighten(@primary, 10%);
	}
	&:active {
		color: darken(@primary, 10%);
	}
}

h1, h2, h3, h4, h5, h6 {
	margin: @gap*2 0 @gap;
	font-weight: 400;
	color: inherit;
}

h1 {
	font-size: 260%;
}

h2 {
	font-size: 215%;
	border-bottom: 1px solid @border;
}

h3 {
	font-size: 170%;
}

h4 {
	font-size: 125%;
}

h5 {
	font-size: 100%;
}

h6 {
	font-size: 85%;
}

p {
	margin: @gap 0;
}

table {
	border-collapse: collapse;
	border: 1px solid @border;
}

thead {
	th, td {
		border-bottom: 1px solid @border;
		border-right: 1px solid @border;
		
		&:last-child {
			border-right: none;
		}
	}
}

tbody {
	th, td {
		border-right: 1px solid @border;
		
		&:last-child {
			border-right: none;
		}
	}
}

th, td {
	padding: 0.24em 1.2em;
}

.table-responsive {
	display: inline-block;
	max-width: 100%;
	overflow: auto;
	border: 1px solid @border;
	
	table {
		border: none;
	}
	
	td {
		white-space: pre-line;
	}
}

input, textarea {
	display: block;
	margin: @gap/4 0 @gap;
	width: 100%;
	box-sizing: border-box;
	font-size: inherit;
}

input[type="radio"] {
	display: inline;
	margin: 0 0.2em;
	width: auto;
	vertical-align: middle;
	
	+ label {
		vertical-align: middle;
	}
}

fieldset {
	margin: 0 0 @gap;
	padding: 0;
	border: none;
}

.radios {
	label {
		display: block;
		position: relative;
		padding-left: 1.5em;
	}
	
	input[type="radio"] {
		display: block;
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0.2em;
		margin: auto 0;
	}
}

.highlight(){
	background-color: fade(@highlight, 40%);
}

::selection {
	.highlight();
}

::-moz-selection {
	.highlight();
}

// Grid system
// container
.container-fluid, .container {
	padding: 0 @gap;
}

.container:extend(.container-fluid) {
	margin: 0 auto;
	@media (min-width: @window-sm) {
		max-width: @window-sm;
	}
	@media (min-width: @window-md) {
		max-width: @window-md;
	}
	@media (min-width: @window-lg) {
		max-width: @window-lg;
	}
}

// row and columns
.row() {
	margin-left: -@gap;
	margin-right: -@gap;
	letter-spacing: -1em;	
}

[class|="row"] {
	.row();
}

[class|="col"] {
	padding-left: @gap;
	padding-right: @gap;
	vertical-align: top;
	letter-spacing: normal;
}

// set columns width
.make-cols(@columns, @count) when (@count =< @columns) {
	> .col-@{count} {
		width: percentage(@count/@columns);
	}
	
	.make-cols(@columns, @count + 1);
}

.make-cols-var(@columns, @size, @count) when (@count =< @columns) {
	> .col-@{size}-@{count} {
		width: percentage(@count/@columns);
	}
	
	.make-cols-var(@columns, @size, @count + 1);
}

// set different row
.make-grid(@grids, @count) when (@count =< length(@grids)) {
	@grid: extract(@grids, @count);
	
	.row-@{grid} {
		
		.make-cols-var(@grid, xs, 1);
		
		@media (min-width: @window-sm) {
			.make-cols-var(@grid, sm, 1);
		}
		
		@media (min-width: @window-md) {
			.make-cols-var(@grid, md, 1);
		}
		
		@media (min-width: @window-lg) {
			.make-cols-var(@grid, lg, 1);
		}
	}
	
	.make-grid(@grids, @count + 1);
}
.make-grid(@grids, 1);

// short hand for largest grid
.row {
	@grid: max(@grids);
	
	.make-cols-var(@grid, xs, 1);
	
	@media (min-width: @window-sm) {
		.make-cols-var(@grid, sm, 1);
	}
	
	@media (min-width: @window-md) {
		.make-cols-var(@grid, md, 1);
	}
	
	@media (min-width: @window-lg) {
		.make-cols-var(@grid, lg, 1);
	}
}

.col-grid() {
	display: inline-block;
}

[class*="col-xs-"] {
	.col-grid();
}

@media (min-width: @window-sm) {
	[class*="col-sm-"] {
		.col-grid();
	}
}

@media (min-width: @window-md) {
	[class*="col-md-"] {
		.col-grid();
	}
}

@media (min-width: @window-lg) {
	[class*="col-lg-"] {
		.col-grid();
	}
}

.vcenter > * {
	vertical-align: middle;
}

.vbottom > * {
	vertical-align: bottom;
}

.table {
	.row();
	
	> [class|="row"] {
		display: table;
		margin: 0;
		width: 100%;
		border-collapse: collapse;
		
		> [class|="col"] {
			display: table-cell;
		}
	}
}
