@import "../vars.less";

.gcd(@v1, @v2) {
	.gcd(@v1, @v2) when (@v1 = 0) {
		@gcd: @v2;
	}
	
	.gcd(@v1, @v2) when (@v1 > 0) and (@v1 < @v2) {
		.gcd(mod(@v2, @v1), @v1);
	}
	 
	.gcd(@v1, @v2) when (@v1 > 0) and (@v1 > @v2) {
		.gcd(@v2, @v1);
	}
	 
	.gcd(@v1, @v2) when (@v1 > 0) and (@v1 = @v2){
		@gcd: @v1;
	}
	
	.gcd(@v1, @v2);
}

.make-grid(xs, @grids);
@media (min-width: @window-sm) {
	.make-grid(sm, @grids);
}
@media (min-width: @window-md) {
	.make-grid(md, @grids);
}
@media (min-width: @window-lg) {
	.make-grid(lg, @grids);
}

.make-grid(@size, @grids){
	.make-grid(@i) when (@i =< @grids) {
		.make-col(@j) when (@j =< @i) {
			.gcd(@i, @j);
			
			.col-@{size}-@{j}-@{i} when (@gcd = 1) {
				width: percentage(@j/@i);
			}
			
			.push-@{size}-@{j}-@{i} when (@gcd = 1) {
				left: percentage(@j/@i);
			}
			
			.pull-@{size}-@{j}-@{i} when (@gcd = 1) {
				right: percentage(@j/@i);
			}
			
			.make-col(@j + 1);
		}
		.make-col(1);
		
		.make-grid(@i + 1);
	}
	.make-grid(1);
}

.make-table-var(xs);
@media (min-width: @window-sm) {
	.make-table-var(sm);
}
@media (min-width: @window-md) {
	.make-table-var(md);
}
@media (min-width: @window-lg) {
	.make-table-var(lg);
}

.make-table-var(@size) {
	.table-@{size} {
		display: block;
		margin: 0 -@gap*2;
		
		> * {
			display: table;
			width: 100%;
			margin: 0;
			border-spacing: @gap*2 0;
			table-layout: fixed;
			
			> * {
				display: table-cell;
				padding: 0;
			}
		}
	}
	.table-@{size}-nogap {
		margin: 0;
			> * {
				border-spacing: 0;
		}
	}
}
